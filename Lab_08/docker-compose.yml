version: '3'

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list" ]
      interval: 5s
      timeout: 5s
      retries: 50
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: init-kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic field-reading --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic field-processing --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    depends_on:
      kafka:
        condition: service_healthy

  db:
    build:
      context: db
      dockerfile: Dockerfile
    container_name: db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 50

  field-reader:
    build:
      context: field-reader
      dockerfile: Dockerfile
    container_name: field-reader
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - KAFKA_HOST=kafka:9092
    volumes:
      - type: bind
        source: ./field-reader/data
        target: /app/data
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      field-processor:
        condition: service_started
    links:
      - db
      - kafka
      - field-processor

  field-processor:
    build:
      context: field-processor
      dockerfile: Dockerfile
    container_name: field-processor
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - KAFKA_HOST=kafka:9092
    volumes:
      - type: bind
        source: ./field-processor/data
        target: /app/data
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      moisure-writer:
        condition: service_started
    links:
      - db
      - kafka
      - moisure-writer

  moisure-writer:
    build:
      context: moisure-writer
      dockerfile: Dockerfile
    container_name: moisure-writer
    environment:
      - KAFKA_HOST=kafka:9092
    volumes:
      - type: bind
        source: ./moisure-writer/output
        target: /app/output
    depends_on:
      kafka:
        condition: service_healthy
    links:
      - kafka